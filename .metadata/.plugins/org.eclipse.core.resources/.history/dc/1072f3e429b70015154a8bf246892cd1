package Chapter8;

import java.util.List;
import java.util.ArrayList;

public class Question2{
	private Point[][] memo;
	public Question2(){
	}
	
	public List<Point> getPath(boolean[][] grid){
		if(grid ==  null || grid.length == 0){
			return null;
		}
		this.memo = new Point[grid.length][grid[0].length];
		return getPath(grid, new ArrayList<Point>(), grid.length, grid[0].length);
	}
	
	private List<Point> getPath(boolean[][] grid, List<Point> path, int r, int c){
		if(r <= 0 || c <= 0 || this.memo[r - 1][c - 1] != null || !grid[r - 1][c - 1]){
			return null;
		}
		
		//this.memo[r - 1][c - 1]
		
		if(r == 1 && c == 1){
			path.add(new Point(0,0));
			return path;
		}
		
		if(getPath(grid, path, r-1, c) != null){
			path.add(new Point(r - 1, c - 1));
			return path;
		}
		
		if(getPath(grid, path, r, c - 1) != null){
			path.add(new Point(r - 1, c - 1));
			return path;
		}
		
		return null;
	}
	
	public static void printPath(List<Point> memo){
		System.out.print("["); 
		for(int i = 0; i < memo.size() - 1; i++){
			System.out.print(memo.get(i) + ", ");
		}
		System.out.println(memo.get(memo.size() - 1) + "]"); 
	}
	class Point{
		private int x;
		private int y;
		
		Point(int x, int  y){
			this.x = x;
			this.y = y;
		}
		
		public int getX() {
			return x;
		}
		
		public int getY() {
			return y;
		}
		
		public String toString(){
			return "(" + x + "," + y + ")";
		}
	}
}


