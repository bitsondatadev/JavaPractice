package Chapter8;

import java.util.List;
import java.util.ArrayList;

public class Question2{
	public Question2(){
	}
	
	public List<Point> getPath(boolean[][] grid){
		if(grid ==  null || grid.length == 0){
			return null;
		}
		return getPath(grid, new ArrayList<Point>(), grid.length, grid[0].length);
	}
	
	private List<Point> getPath(boolean[][] grid, List<Point> memo, int r, int c){
		if(r <= 0 || c <= 0 || !grid[r - 1][c - 1]){
			return null;
		}
		
		if(r == 1 && c == 1){
			memo.add(new Point(0,0));
			return memo;
		}
		
		if(getPath(grid, memo, r-1, c) != null){
			memo.add(new Point(r - 2, c - 1));
			return memo;
		}
		
		if(getPath(grid, memo, r, c - 1) != null){
			memo.add(new Point(r - 1, c - 2));
			return memo;
		}
		
		return null;
	}
}

class Point{
	private int x;
	private int y;
	
	Point(int x, int  y){
		this.x = x;
		this.y = y;
	}
	
	public int getX() {
		return x;
	}
	
	public int getY() {
		return y;
	}
	
	public String toString(){
		return "(" + x + "," + y + ")";
	}
}
