package DataStructures;

import java.util.List;
import java.util.ArrayList;

interface TreeTask<T,R>{
	R run(T data);
}

public class TreeNode<T,R>{

	private List<TreeNode<T,R>> children = null;
	private T data;

	public TreeNode(T data){
		this.children = new ArrayList<TreeNode<T,R>>();
		this.setData(data);	
	}

	public List<TreeNode<T,R>> getChildren() {
		return children;
	}

	public void appendChild(TreeNode<T,R> child) {
		this.children.add(child);
	}

	public T getData() {
		return data;
	}

	public void setData(T data) {
		this.data = data;
	}
	
	public void visit(TreeTask<T,T> t){
		t.run()
	}
	
	public static void inOrderTraversal(TreeNode<Object, Object> node){
		if(node != null){
			for(TreeNode<Object, Object> child: node.getChildren()){
				
			}
		}
	}



}
